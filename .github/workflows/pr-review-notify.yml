name: Notify Reviewers on PR

on:
  pull_request:
    types: [review_requested]
  workflow_dispatch:

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Wait for reviewers to settle
        run: sleep 0

      - name: Map GitHub usernames to Discord IDs
        id: map-reviewers
        env:
          REVIEWERS_JSON: ${{ toJson(github.event.pull_request.requested_reviewers) }}
        run: |
          echo "üîÑ Mapping GitHub reviewers to Discord mentions..."

          declare -A USER_MAP=(
            ["64etuor"]="637937081875824650"
            ["wishbornDev"]="1313511515407777865"
            ["gyeongmin03"]="377380180467122178"
            ["hwan1023"]="963059572812157010"
            ["nineeko"]="821058142795333655"
            ["Jayboo816"]="1326066071676915763"
          )

          mentions=""
          while read login; do
            id=${USER_MAP[$login]}
            if [ -n "$id" ]; then
              mentions+="<@$id> "
            else
              echo "‚ö†Ô∏è No Discord ID mapped for $login"
            fi
          done < <(echo "$REVIEWERS_JSON" | jq -r '.[].login')

          echo "mentions=$mentions" >> "$GITHUB_OUTPUT"

      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          MENTIONS: ${{ steps.map-reviewers.outputs.mentions }}
          PR_URL: ${{ github.event.pull_request.html_url }}
        run: |
          curl -X POST "$DISCORD_WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -d '{
              "content": "üì£ '"$MENTIONS"'Îãò! Pull Request Î¶¨Î∑∞Ïñ¥Î°ú ÏßÄÏ†ïÎêòÏóàÏäµÎãàÎã§.\n\n'"$PR_URL"'",
              "allowed_mentions": { "parse": ["users"] }
            }'
