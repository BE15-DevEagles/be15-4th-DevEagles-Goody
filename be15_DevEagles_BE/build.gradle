plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id "com.diffplug.spotless" version "6.20.0"
}

spotless {
    java {
        importOrder('java', 'javax', 'org', 'com', '')
        removeUnusedImports()
        googleJavaFormat('1.27.0')
        formatAnnotations()
    }
}

group = 'com.deveagles'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.modelmapper:modelmapper:3.2.0'
    
    // https://mvnrepository.com/artifact/org.mongodb/mongodb-driver-sync
    //Querydsl - 보안 취약점 패치된 버전으로 업데이트
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.4.3'
    implementation 'org.mongodb:mongodb-driver-sync:5.2.1'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    
    // // AWS SDK 환경 설정 없어서 통합 테스트시 오류, 향후 주석 풀어주세요
    // implementation 'io.awspring.cloud:spring-cloud-aws-starter:3.3.0'
    // implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.3.0'
    
    // WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // Elasticsearch
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'co.elastic.clients:elasticsearch-java:8.13.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
}
tasks.named('test') {
    useJUnitPlatform()
}

// Husky를 사용하므로 이 태스크는 비활성화합니다
// tasks.register('updateGitHooks', Copy) {
//     from '../scripts/pre-commit'          // 커밋 훅 원본 위치 (루트 기준 상대경로)
//     into '../.git/hooks'                  // Git 훅 설치 위치 (루트 기준 상대경로)
// }

// tasks.register('makeGitHooksExecutable') {
//     dependsOn updateGitHooks

//     doLast {
//         def os = System.getProperty("os.name").toLowerCase()
//         if (!os.contains("windows")) {
//             println 'Unix OS: chmod executed'
//             // exec 대신 로깅만 하도록 변경
//             println 'chmod +x .git/hooks/pre-commit would be executed'
//         } else {
//             println 'Windows OS: chmod skipped'
//         }
//     }
// }

// tasks.named('compileJava') {
//     dependsOn makeGitHooksExecutable
// }
