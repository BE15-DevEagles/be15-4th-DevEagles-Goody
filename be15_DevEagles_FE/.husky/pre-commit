#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "[Hook] Git pre-commit hook started..."
echo "📂 [Info] Project root: $(pwd)"

# 프로젝트 루트 경로 저장
PROJECT_ROOT=$(pwd)

# 디버깅: 스테이징된 모든 파일 표시
echo "[Info] Staged files:"
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACMR)
echo "$STAGED_FILES"

# 프론트엔드 파일 검사
echo "[Debug] Checking for JS/Vue files..."
JS_VUE_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\.(js|vue)$')
echo "[Debug] JS/Vue files found: $JS_VUE_FILES"

if [ -n "$JS_VUE_FILES" ]; then
  echo "[INFO] 변경된 JS/Vue 파일 감지됨"
  
  # 프론트엔드 디렉토리로 이동
  echo "[Debug] Moving to frontend directory"
  cd "$PROJECT_ROOT" || exit 1
  echo "[Debug] Current directory: $(pwd)"
  
  # package.json이 존재하는지 확인
  if [ ! -f "be15_DevEagles_FE/package.json" ]; then
    echo "❌ [Error] package.json not found in $(pwd)/be15_DevEagles_FE"
    exit 1
  fi
  
  echo "[Action] Running lint-staged for frontend..."
  # lint-staged를 통한 ESLint 및 Prettier 실행
  cd be15_DevEagles_FE
  export FORCE_COLOR=1
  npx lint-staged
  
  LINT_RESULT=$?
  if [ $LINT_RESULT -ne 0 ]; then
    echo "❌ [Error] Frontend linting failed! Error code: $LINT_RESULT"
    exit 1
  fi
  
  # 변경된 프론트엔드 파일 다시 스테이징
  echo "[Action] Re-adding modified JS/Vue files to staging..."
  cd "$PROJECT_ROOT"
  git add $JS_VUE_FILES
  
  echo "✅ [Success] Frontend linting completed."
fi

# 백엔드 디렉토리로 이동하여 필요한 체크 수행
echo "[Action] Running spotlessApply..."
cd "$PROJECT_ROOT" || exit 1

echo "[Debug] Current directory: $(pwd)"

# 빌드 파일이 있는 BE 디렉토리로 이동
if [ -d "be15_DevEagles_BE" ]; then
  echo "[Debug] Changing to be15_DevEagles_BE directory"
  cd be15_DevEagles_BE || exit 1
  
  # gradlew 실행
  if [ -f "gradlew.bat" ]; then
    echo "[Debug] Using gradlew.bat"
    ./gradlew.bat spotlessApply
  elif [ -f "gradlew" ]; then
    echo "[Debug] Using gradlew"
    ./gradlew spotlessApply
  else
    echo "[Error] Could not find gradlew or gradlew.bat in BE directory"
    exit 1
  fi
else
  echo "[Info] be15_DevEagles_BE directory not found or no Java files changed"
fi

if [ $? -ne 0 ]; then
    echo "❌ [Error] spotlessApply failed!"
    exit 1
else
    echo "✅ [Success] spotlessApply completed successfully."
fi

# 변경된 파일 다시 스테이징
echo "[Action] Re-adding modified files to staging..."
# 루트 디렉토리로 돌아가기
cd "$PROJECT_ROOT" || exit 1
echo "[Debug] Back to root directory: $(pwd)"

for file in $STAGED_FILES; do
  echo "[Debug] Checking file: $file"
  if test -f "$file"; then
    echo "➕ Adding: $file"
    git add "$file"
    echo "[Debug] Add result: $?"
  else
    echo "[Warning] File not found: $file"
  fi
done

echo "✅ [Hook] Pre-commit hook finished successfully."
